1.无序数组的中位数
    将无序数组的前length/2个数字构成一个小顶堆，将剩下一半的元素依次和堆顶元素比较，若比堆顶元素大，则替换（并调整堆），若小，则继续。
    最后数组长为奇数，直接输出根节点，若为偶数，则输出堆顶元素与它的孩子结点中较小的那个的均值。

2.数据流的中位数
    数据流进来的时候，中位数是左边序列的最大值，又是右边序列的最小值，所以可以用两个堆，一个大顶堆一个小顶堆，左边的数据在大顶堆，右边的数据在小顶堆
    定义堆大堆跟节点为Max，最小堆的跟节点为Min
    2.1保证数据平分在两个堆：数据总数目是偶数时，插入最小堆，奇数时插入最大堆
    2.2保证所有最大堆中的数据要小于最小堆中的数据：数目为偶数时-插入大顶堆，再将max插入小顶堆。当数目为奇数-插入小顶堆，再将min插入大顶堆


3.两数之和（1）
    遍历数组，用一个hashmap来存<nums[i],i>，然后判断每个数字和target的差是不是在map里面，在的话返回

4.三数之和（）